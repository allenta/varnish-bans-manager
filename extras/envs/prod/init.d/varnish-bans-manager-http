#!/bin/bash

### BEGIN INIT INFO
# Provides:          varnish-bans-manager-http
# Required-Start:    $network $local_fs
# Required-Stop:     $network $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Varnish Bans Manager (VBM) HTTP frontend daemon
### END INIT INFO

##
## Configuration.
##
HTTP_VIRTUALENV="/var/www/varnish-bans-manager"
HTTP="varnish-bans-manager start"
HTTP_USER="www-data"
HTTP_GROUP="www-data"
HTTP_PID_DIR="/var/run/varnish-bans-manager"
HTTP_PID_FILE="$HTTP_PID_DIR/http.pid"
HTTP_LOG_DIR="/var/log/varnish-bans-manager"
HTTP_LOG_FILE="$HTTP_LOG_DIR/http.log"
HTTP_DAEMON_OPTS="\
    --pid="$HTTP_PID_FILE" \
    --log-file="$HTTP_LOG_FILE" \
    --user="$HTTP_USER" \
    --group="$HTTP_GROUP" \
    --daemon"

##
##
##
wait_pid () {
    pid=$1
    forever=1
    i=0
    while [ $forever -gt 0 ]; do
        kill -0 $pid 1>/dev/null 2>&1
        if [ $? -eq 1 ]; then
            echo "OK"
            forever=0
        else
            kill -TERM "$pid"
            i=$((i + 1))
            if [ $i -gt 60 ]; then
                echo "ERROR" 1>&2
                echo "Timed out while stopping (30s)" 1>&2
                forever=0
            else
                sleep 0.5
            fi
        fi
    done
}

##
##
##
start_http () {
    echo "Starting HTTP..."
    $HTTP $HTTP_DAEMON_OPTS
}

##
##
##
stop_http () {
    echo -n "Stopping HTTP... "
    if [ -f "$HTTP_PID_FILE" ]; then
        wait_pid $(cat "$HTTP_PID_FILE")
        rm -f "$HTTP_PID_FILE"
    else
        echo "NOT RUNNING" 1>&2
    fi
}

##
##
##
restart_http () {
    echo "Restarting HTTP..."
    stop_http
    start_http
}

##
##
##
source "$HTTP_VIRTUALENV/bin/activate"
mkdir -p "$HTTP_PID_DIR" "$HTTP_LOG_DIR"
chown $HTTP_USER:$HTTP_GROUP "$HTTP_PID_DIR" "$HTTP_LOG_DIR"

##
##
##
case "$1" in
    start)
        start_http
    ;;

    stop)
        stop_http
    ;;

    restart)
        restart_http
    ;;

    reload|force-reload)
        echo "Use restart" 1>&2
        exit 1
    ;;

    *)
        echo "Usage: $0 {start|stop|restart}" 1>&2
        exit 64  # EX_USAGE
    ;;
esac

##
## Done!
##
deactivate
exit 0
