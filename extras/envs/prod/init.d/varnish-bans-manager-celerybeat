#!/bin/bash

### BEGIN INIT INFO
# Provides:          varnish-bans-manager-celerybeat
# Required-Start:    $network $local_fs
# Required-Stop:     $network $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Varnish Bans Manager (VBM) Celery periodic task scheduler
### END INIT INFO

##
## Configuration.
##
CELERYBEAT_VIRTUALENV="/var/www/varnish-bans-manager"
CELERYBEAT="python -mvarnish_bans_manager.runner celerybeat"
CELERYBEAT_USER="www-data"
CELERYBEAT_GROUP="www-data"
CELERYBEAT_PID_DIR="/var/run/varnish-bans-manager"
CELERYBEAT_PID_FILE="$CELERYBEAT_PID_DIR/celerybeat.pid"
CELERYBEAT_LOG_DIR="/var/log/varnish-bans-manager"
CELERYBEAT_LOG_FILE="$CELERYBEAT_LOG_DIR/celerybeat.log"
CELERYBEAT_LOG_LEVEL="WARNING"
CELERYBEAT_SCHEDULE="/var/www/varnish-bans-manager/celerybeat-schedule"
CELERYBEAT_DAEMON_OPTS="\
    --pidfile="$CELERYBEAT_PID_FILE" \
    --logfile="$CELERYBEAT_LOG_FILE" \
    --loglevel="$CELERYBEAT_LOG_LEVEL" \
    --schedule="$CELERYBEAT_SCHEDULE" \
    --uid="$CELERYBEAT_USER" \
    --gid="$CELERYBEAT_GROUP" \
    --detach"

##
##
##
wait_pid () {
    pid=$1
    forever=1
    i=0
    while [ $forever -gt 0 ]; do
        kill -0 $pid 1>/dev/null 2>&1
        if [ $? -eq 1 ]; then
            echo "OK"
            forever=0
        else
            kill -TERM "$pid"
            i=$((i + 1))
            if [ $i -gt 60 ]; then
                echo "ERROR" 1>&2
                echo "Timed out while stopping (30s)" 1>&2
                forever=0
            else
                sleep 0.5
            fi
        fi
    done
}

##
##
##
start_celerybeat () {
    echo "Starting celerybeat..."
    $CELERYBEAT $CELERYBEAT_DAEMON_OPTS
}

##
##
##
stop_celerybeat () {
    echo -n "Stopping celerybeat... "
    if [ -f "$CELERYBEAT_PID_FILE" ]; then
        wait_pid $(cat "$CELERYBEAT_PID_FILE")
        rm -f "$CELERYBEAT_PID_FILE"
    else
        echo "NOT RUNNING" 1>&2
    fi
}

##
##
##
restart_celerybeat () {
    echo "Restarting celerybeat..."
    stop_celerybeat
    start_celerybeat
}

##
##
##
source "$CELERYBEAT_VIRTUALENV/bin/activate"
mkdir -p "$CELERYBEAT_PID_DIR" "$CELERYBEAT_LOG_DIR"
chown $CELERYBEAT_USER:$CELERYBEAT_GROUP "$CELERYBEAT_PID_DIR" "$CELERYBEAT_LOG_DIR"

##
##
##
case "$1" in
    start)
        start_celerybeat
    ;;

    stop)
        stop_celerybeat
    ;;

    restart)
        restart_celerybeat
    ;;

    reload|force-reload)
        echo "Use restart" 1>&2
        exit 1
    ;;

    *)
        echo "Usage: $0 {start|stop|restart}" 1>&2
        exit 64  # EX_USAGE
    ;;
esac

##
## Done!
##
deactivate
exit 0
